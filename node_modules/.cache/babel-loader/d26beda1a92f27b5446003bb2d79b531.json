{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  console.log(props);\n  console.log(props.questionData);\n  const [tally, setTally] = React.useState({\n    value: \"\"\n  });\n  const wrongAnswers = props.questionData.incorrect_answers.map(a => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 14\n  }, this) // <div>\n  // <input\n  // type=\"radio\"\n  // value=\"incorrect\">yuh\n  // </input>\n  // <label>{a}</label>\n  // </div>\n  ); // console.log(props.questionData.incorectAnswers)\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"HELLO \", props.questionData.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), wrongAnswers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"2EG7PVTmDJLJdssa+vxq2oya/bg=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","console","log","questionData","tally","setTally","useState","value","wrongAnswers","incorrect_answers","map","a","question"],"sources":["/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js"],"sourcesContent":["import React from \"react\";\nexport default function Question(props){\n    console.log(props)\n    console.log(props.questionData)\n\n    const [tally,setTally] = React.useState({\n        value:\"\"\n    })\n    const wrongAnswers = props.questionData.incorrect_answers.map(\n        a => <h2>hi</h2>\n        // <div>\n        // <input\n        // type=\"radio\"\n        // value=\"incorrect\">yuh\n        \n        // </input>\n        // <label>{a}</label>\n        // </div>\n        \n    )\n   // console.log(props.questionData.incorectAnswers)\n    return(\n        <section>\n        <h2>HELLO {props.questionData.question}</h2>\n        <input>hi</input>\n        {wrongAnswers}\n        {/* <input\n        type=\"radio\"\n        id=\"\"\n        //id = props. the answer\n        name=\"employment\"\n        value=\"part-time\"\n        checked={formData.employment === \"part-time\"}\n        //props handleChange to React.state thing?\n        onChange={handleChange}\n         />\n        */}\n        </section>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;EAAA;;EACnCC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACAC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAlB;EAEA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,KAAK,CAACQ,QAAN,CAAe;IACpCC,KAAK,EAAC;EAD8B,CAAf,CAAzB;EAGA,MAAMC,YAAY,GAAGR,KAAK,CAACG,YAAN,CAAmBM,iBAAnB,CAAqCC,GAArC,CACjBC,CAAC,iBAAI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADY,CAEjB;EACA;EACA;EACA;EAEA;EACA;EACA;EATiB,CAArB,CAPmC,CAmBpC;;EACC,oBACI;IAAA,wBACA;MAAA,qBAAWX,KAAK,CAACG,YAAN,CAAmBS,QAA9B;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,EAGCJ,YAHD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAtCuBT,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}