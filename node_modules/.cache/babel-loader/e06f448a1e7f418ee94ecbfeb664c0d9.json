{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  function handleChange(event) {\n    console.log(\"Changed\");\n    console.log(event.target.value);\n    props.setTally(prevTally => prevTally + 1);\n    console.log(\"changed2\");\n  }\n\n  function handleSubmit() {}\n\n  React.useEffect(function () {}, []); // console.log(props.questionData.incorectAnswers)\n  //gonna have state in parent, a tally, then set it in here w props??... \n  //    on form submit... if props.data.correct answer == checked thing in the form... \n  //    add 1 to tally??.. set the state, then display the score at the end\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), wrongAnswers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","handleChange","event","console","log","target","value","setTally","prevTally","handleSubmit","useEffect","questionData","question","wrongAnswers"],"sources":["/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js"],"sourcesContent":["import React from \"react\";\nexport default function Question(props) {\n    \n    function handleChange(event){\n        console.log(\"Changed\")\n        console.log(event.target.value)\n        props.setTally(prevTally => prevTally + 1)\n        \n        console.log(\"changed2\")\n    }\n    function handleSubmit(){\n\n    }\n    React.useEffect(function(){\n\n\n    },[])\n   \n    // console.log(props.questionData.incorectAnswers)\n    //gonna have state in parent, a tally, then set it in here w props??... \n    //    on form submit... if props.data.correct answer == checked thing in the form... \n    //    add 1 to tally??.. set the state, then display the score at the end\n    return (\n        <section>\n            <form>\n                <h2>{props.questionData.question}</h2>\n                {wrongAnswers}\n               \n            </form>\n            \n        </section>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;IACxBC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;IACAN,KAAK,CAACO,QAAN,CAAeC,SAAS,IAAIA,SAAS,GAAG,CAAxC;IAEAL,OAAO,CAACC,GAAR,CAAY,UAAZ;EACH;;EACD,SAASK,YAAT,GAAuB,CAEtB;;EACDX,KAAK,CAACY,SAAN,CAAgB,YAAU,CAGzB,CAHD,EAGE,EAHF,EAZoC,CAiBpC;EACA;EACA;EACA;;EACA,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,UAAKV,KAAK,CAACW,YAAN,CAAmBC;MAAxB;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKC,YAFL;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GA/BuBd,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}