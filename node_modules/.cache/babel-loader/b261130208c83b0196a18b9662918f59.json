{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [tally, setTally] = React.useState({\n    value: \"\"\n  });\n  const wrongAnswers = props.questionData.incorrect_answers.map(a => /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"temp\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"radio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), a]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 14\n  }, this)); // console.log(props.questionData.incorectAnswers)\n  //gonna have state in parent, a tally, then set it in here w props??... \n  //    on form submit... if props.data.correct answer == checked thing in the form... \n  //    add 1 to tally??.. set the state, then display the score at the end\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), wrongAnswers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"JOm49VkxWxlo0HQT2veVub8ROEM=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","tally","setTally","useState","value","wrongAnswers","questionData","incorrect_answers","map","a","question"],"sources":["/Users/joshuacheng/Desktop/CodingProjects/Quizzical/src/Question.js"],"sourcesContent":["import React from \"react\";\nexport default function Question(props) {\n\n    const [tally, setTally] = React.useState({\n        value: \"\"\n    })\n    const wrongAnswers = props.questionData.incorrect_answers.map(\n        a => <label className=\"temp\">\n            <input type=\"radio\" name=\"radio\" />\n            {a}\n        </label>\n    )\n    // console.log(props.questionData.incorectAnswers)\n    //gonna have state in parent, a tally, then set it in here w props??... \n    //    on form submit... if props.data.correct answer == checked thing in the form... \n    //    add 1 to tally??.. set the state, then display the score at the end\n    return (\n        <section>\n            <form>\n                <h2>{props.questionData.question}</h2>\n                {wrongAnswers}\n            </form>\n        </section>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe;IACrCC,KAAK,EAAE;EAD8B,CAAf,CAA1B;EAGA,MAAMC,YAAY,GAAGL,KAAK,CAACM,YAAN,CAAmBC,iBAAnB,CAAqCC,GAArC,CACjBC,CAAC,iBAAI;IAAO,SAAS,EAAC,MAAjB;IAAA,wBACD;MAAO,IAAI,EAAC,OAAZ;MAAoB,IAAI,EAAC;IAAzB;MAAA;MAAA;MAAA;IAAA,QADC,EAEAA,CAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADY,CAArB,CALoC,CAWpC;EACA;EACA;EACA;;EACA,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,UAAKT,KAAK,CAACM,YAAN,CAAmBI;MAAxB;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKL,YAFL;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAvBuBN,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}